Test081.java
-배열 선언과 초기화
○ 배열의 개요
   
   1. 배열이란?
      크기와 성격이 같은 일련의 원소들이 모여
	  공동의 집합 구조를 갖는 자료의 집합체를 의미하는 것으로
	  『동질적인 성격을 가진 자료들』에 대해
	  개별적으로 자료형(Data type)을 부여하지 않고
	  하나의 이름을 가지고 일괄적으로 처리할 목적으로 사용된다.

   2. 자바에서의 배열은 다음과 같은 순서에 의해 사용된다.
      배열 선언 → 배열에 메모리 할당 → 배열 요소 접근(배열 요소의 사용)


○ 형식 및 구조
   
   자료형[] 변수명; //[]생략가능 ㄴㄴ 문법적으로 쓰임.
   변수명 = new 자료형[요소크기]
   변수명[인덱스] = 값;

   int[] arr; == int a[]; (같음.)
   arr = new int[3];
   int [] arr == new int[3]; 
					// 인스턴스 생성이랑 비슷하게 생겼으니 헷갈 ㄴㄴ
					// 배열도 참조타입임. 주소가 담겨있음.

// 배열은 다음과 같이 선언과 동시에
		// 메모리 할당 및 초기화가 가능하다.
		int [] arr2 = new int[10];
		int [] arr3 = {1,2,3,4,5,6,7,8,9,0};
		int arr4 [] = {1,2,3,4,5,6,7,8,9,0};
//※ 값을 할당하지 않은 나머지 배열 공간은
		//   자동으로 초기화된다 → 0 (int형 배열)
int num = 10;
		System.out.println("num : " + num);
		// -- >> num : 10

		System.out.println("arr : " + arr);
		// -- >> arr : [I@15db9742
		//       메모리의 주소값을 의미하는 건 아님.
		//       배열을 출력하기 위해 배열변수를 일반 변수처럼 사용하여
		//       배열의 각 방에 들어있는 데이터가 출력되는 것이 아니라
		//       우리가 알아볼 수 없는 코드가 출력된다.
		//       (자바는 메모리 주소값에 사용자가 직접 접근하는 것을 허용하지 않기 때문에)

변수는 변수값이 그대로 담겨있고 배열은 참조주소가 담겨있다!
그래서 배열 값에 접근하려면 arr[0]이런식! 인덱스번호를 줘라!

Test082.java
// 배열의 기본적 활용

// 임의의 정수들이 들어있는 배열의 숫자 데이터들 중
// 짝수인 요소만 골라서 출력하고, 3의 배수인 요소만 골라서 출력하는
// 프로그램을 구현한다.
배열의 길이(방 갯수) 확인 : arr.length
arr의 변수임. 

Test083.java
// 배열의 선언과 초기화
// 배열의 기본적 활용

// 『char』 자료형의 배열을 만들어
// 그 배열의 각 방에 알파벳 대문자를 채우고
// 채워진 그 배열의 전체 요소를 출력하는 프로그램을 구현한다.
// 단, 채우는 구문과 출력하는 구문은 따로 분리하여 처리한다.

// 실행 예 )
// A B C D E F G H I ... W X Y Z
// 계속하려면 아무 키나 누르세요...
★반복문 안에 변수 1개아님!!
for(수식1;수식2;수식3)이면
수식1, 수식3에는 변수 여러개 가능합니다!

Test084.java
-배열의 선언과 초기화
// 배열의 기본적 활용

// 사용자로부터 인원수를 입력 받고
// 입력받은 인원 수 만큼의 학생 이름과 전화번호를 입력받고
// 이를 이름 배열과 전화번호 배열로 구성하여 
// 결과를 출력할 수 있는 프로그램을 구현한다.

// 실행 예)
// 입력 처리할 학생 수 입력(명, 1 ~ 10) : 27
// 입력 처리할 학생 수 입력(명, 1 ~ 10) : -5
// 입력 처리할 학생 수 입력(명, 1 ~ 10) : 3
// 이름 전화번호 입력[1](공백 구분) : 박현수 010-1111-1111
// 이름 전화번호 입력[2](공백 구분) : 신시은 010-2222-2222
// 이름 전화번호 입력[3](공백 구분) : 오이삭 010-3333-3333

//---------------------------------
// 전체 학생 수 : 3명
//---------------------------------
//이름		       전화번호
//박현수	       010-1111-1111
//신시은		   010-2222-2222
//오이삭		   010-3333-3333
//---------------------------------
//계속하려면 ................

do ~ while문에서
while문이 true면 반복혀라!!

Test085.java	과제
-배열의 기본적 활용

//   사용자로부터 임의의 정수를 임의의 갯수만큼 입력받아
//   입력받은 수 중에서 가장 큰 수를 출력하는 프로그램을 작성한다.
//   단, 배열을 활용하여 구현할 수 있도록 한다.

// 실행 예)
// 입력할 데이터의 갯수 : 12
// 데이터 입력 (공백 구분) : 74 65 13 91 5 67 33 41 2 50 11 38
// >> 가장 큰 수 → 91
// 계속하려면 아무 키나 누르세요...
가장 큰 수 구하기!
max변수를 arr[0]으로 주고 크기비교해서 max를 초기화해라!


Test086.java	과제
-배열의 기본적 활용

//   사용자로부터 임의의 학생 수를 입력받고
//   그만큼의 점수(정수 형태)를 입력받아
//   전체 학생 점수이 합, 평균, 편차를 구하여
//   결과를 출력하는 프로그램을 구현한다.
//   단, 배열을 활용하여 처리할 수 있도록 한다.

Test087.java
-배열의 배열(2차원 배열)
int arr [][] = new int [3][4];
[] [] [] [] ~ 웅웅 ↓↓↓↓ 숑숑이! 
[] [] [] [] ~
[] [] [] [] ~

Test088.java
-배열의 배열(2차원 배열)

// 배열의 배열(다차원 배열)을 활용하여
// 다음과 같은 데이터를 요소로 취하는 배열 (5 x 5)을 구성하고
// 그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
 1  2  3  4  5
 6  7  8  9 10
11 12 13 14 15
16 18 18 19 20
21 22 23 24 25
int arr [][] = new int [5][5];
1부터 25까지 넣고 배열 전체 요소 출력 ㄱㄱ

Test089.java
-배열의 배열(2차원 배열)

// 실행 예)
/*
   1   2   3   4   5  
   2   3   4   5   6  
   3   4   5   6   7  
   4   5   6   7   8  
   5   6   7   8   9  

계속하려면 아무 키나 누르십시오 . . .
[5][6]만들고 두번째 웅웅이 보니까 1씩 커짐.

Test090.java♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥
-배열의 배열(2차원 배열)

// 배열의 배열(다차원 배열)을 활용하여
// 다음과 같은 데이터를 요소로 취하는 배열을 구성하고
// 그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
   1   2   3   4   5   
   5   1   2   3   4   
   4   5   1   2   3   
   3   4   5   1   2  
   2   3   4   5   1   
출력 시작점을 확인!! 이거 존나 어려웠삼.

Test091.java♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥
-배열의 배열(2차원 배열)

// 배열의 배열(다차원 배열)을 활용하여
// 다음과 같은 데이터를 요소로 취하는 배열을 구성하고
// 그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
   1   8   9    16   17   
   2   7   10   15   18   
   3   6   11   14   19   
   4   5   12   13   20     

계속하려면 아무 키나 누르십시오 . . .
시작점 확인!! 배열문제는 시작점을 확인해라!

Test092.java♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥
-배열의 배열(2차원 배열)

// 배열의 배열(다차원 배열)을 활용하여
// 다음과 같은 데이터를 요소로 취하는 배열을 구성하고
// 그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
   E   J   O   T   Y
   D   I   N   S   X   
   C   H   M   R   W   
   B   G   L   Q   V   
   A   F   K   P   U     

계속하려면 아무 키나 누르십시오 . . .
역순!!!!!!!!!!!!!!!! 배열은 문제 종종 풀어보자잉

Test093.java♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥
-배열의 배열(2차원 배열)

// 배열의 배열(다차원 배열)을 활용하여
// 다음과 같은 데이터를 요소로 취하는 배열을 구성하고
// 그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
   1   2   3   4   10
   5   6   7   8   26
   9  10  11  12   42
  13  14  15  16   58
  28  32  36  40  136

Test094.java	과제
- 배열의 배열(2차원 배열)

//   배열의 배열(다차원 배열)을 활용하여
//   다음과 같은 데이터를 요소로 취하는 배열을 구성하고
//   그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
A  B  C  D  E
F  G  H  I  J
K  L  M  N  O
P  Q  R  S  T
U  V  W  X  Y

계속하려면 아무 키나 누르십시오 . . .

Test095.java	과제
-배열의 배열(2차원 배열)


//○ 과제
//   배열의 배열(다차원 배열)을 활용하여
//   다음과 같은 데이터를 요소로 취하는 배열을 구성하고
//   그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
A
B  C
D  E  F
G  H  I  J
K  L  M  N  O

계속하려면 아무 키나 누르십시오 . . .

Test096.java	과제
-배열의 배열(2차원 배열)
//   배열의 배열(다차원 배열)을 활용하여
//   다음과 같은 데이터를 요소로 취하는 배열을 구성하고
//   그 결과를 출력하는 프로그램을 구현한다.

// 실행 예)
/*
A
C  B 
D  E  F
J  I  H  G 
K  L  M  N  O

계속하려면 아무 키나 누르십시오 . . .

Test097.java
-배열과 난수 처리(※ Random 클래스 활용)
//배열과 난수 처리(※ Random 클래스 활용)

//사용자로부터 임의의 정수를 입력받아
//그 정수의 갯수만큼 난수를 발생시켜 배열에 담고
//배열에 담겨있는 데이터들 중
//가장 큰 값과 가장 작은 값을 선택하여
//결과를 출력하는 프로그램을 구현한다.

//실행 예)
//발생시킬 난수의 갯수 입력 : 10
//50 7 24 81 72 45 61 38 1 99 
//가장 큰 값 : 99, 가장 작은 값 : 1
//계속하려면 .........

무작위 정수(난수) 발생하기 위해서는
난수 발생 전용 객체가 필요하다.
『java.util.Random』
랜덤 인스턴스 생성. // BufferedReader나 Scanner처럼이용.
Random rd = new Random();
Random 클래스의 『nextInt()』 메소드
0 ~ 매개변수로 넘겨받은 정수 n - 1까지의 수 중
무작위 정수(난수) 1개를 발생시킨다.
rd.nextInt(10) // 0 ~ 9
개수는 한개, 그 수의 범위가 0 ~ 9임.
다시 기억해라 개수는 1개이고 범위가 0~9인것.!
가장 큰값, 가장 작은 값은 배열 엉망되도 좋으니 자리바꾸기말고
초기화를이용해라!!!!!!!!!!!!

Test098.java
// 배열의 복사

// Test099.java 파일과 비교 ~!!!

// ※ 배열 변수의 복사에는 데이터 복사, 주소값 복사 두 가지 형태가 존재한다.

//    주소값 복사 → 얕은 복사 → 원본을 수정하면 복사본에 영향을 미치게 되는 복사 방법.
//                                (배열 뿐 아니라 모든 『참조형 데이터』에 해당하는 복사 방법.)

//    데이터 복사 → 깊은 복사 → 실제 요소로 들어있는 값에 대한 복사로
//                                원본을 수정해도 복사본에 영향으 미치지 않는 복사 방법.

// 주소값 복사
변수는 값타입입니다. 그래서 원본 바껴도 안바뀌고
배열은 배열전체를 복사하면 주소값복사(얕은 복사)가 되어
원본배열이 바뀌면 복사배열도 바뀝니다!!!!!!!!!!!!!!!

Test099.java
// 배열의 복사

//Test098.java 파일과 비교 ~!!!

// ※ 배열 변수의 복사에는 데이터 복사, 주소값 복사 두 가지 형태가 존재한다.

//    주소값 복사 → 얕은 복사 → 원본을 수정하면 복사본에 영향을 미치게 되는 복사 방법.
//                                (배열 뿐 아니라 모든 『참조형 데이터』에 해당하는 복사 방법.)

//    데이터 복사 → 깊은 복사 → 실제 요소로 들어있는 값에 대한 복사로
//                                원본을 수정해도 복사본에 영향으 미치지 않는 복사 방법.

// 데이터 복사
// - int 형 배열에 대한 깊은 의미의 복사를 처리하는
//   메소드를 정의하는 형태로 실습
프리미티브 자료형 복사처럼(값타입) 요소 하나하나를 복사해서 원본이 바뀌어도 
복사배열은 바뀌지 않음!
1. 배열은 객체이다.
2. 배열.length 사용이 가능하다. length는 객체가 가진 변수
3. 배열.clone(); 는 객체와 설계도 
4. 객체를 반환하는 자바가 제공한 메소드


//nums는 객체이기 떄문에
		//nums.lenght 사용가능
		//nums.clone(); 는 객체와 설계도
		//nums.clone(); 는 객체를 반환 check~! 자바한테 제공받은 것

원본배열의 요소를 하나하나 복사한다는 점이 주소값 복사랑 다른점!
요소 하나하나 값타입을 복사! 배열은 참조타입!
