/*=====================================
■■■실행 흐름의 컨트롤(제어문)■■■
======================================*/

//반복문(while 문) 실습


//1부터 100까지의 정수 중에서
//짝수들의 합과 홀수들의 합을 따로 구분하여 계산한다.
// 단, 반복문은 while 문을 사용할 수 있도록 하며,
// 조건 구문은 if 조건문을 사용하여 작성할 수 있도록 한다.

// 실행 예 )
// 1부터 100까지의 정수 중
// 짝수의 합 : 2550
// 홀수의 합 : 2550
//계속 ............


public class Test048
{
	public static void main(String[] args)
	{
		// 주요 변수 선언
		int n = 1; //1~100증가할 변수
		int even = 0; //짝수합
		int odd = 0; //홀수합

		//연산 및 처리
		while (n<=100)
		{
			if (n%2 ==0)//n이 짝수일 경우
			{
				even += n;
			}
			else if (n%2 != 0)//n이 홀수일 경우
			{
				odd += n;
			}
			else 
			{
				System.out.println("판별 불가 데이터");
				return; //---메소드 종료 → main() 메소드 종료. 프로그램 종료.
			}

			n++;  //반복문안에 여려개가 들어가는거 비효율.

		}
		System.out.println("1부터 100까지의 정수 중");
		System.out.println("짝수의 합 : " + even);
		System.out.println("홀수의 합 : " + odd);
	}
}
/*
1부터 100까지의 정수 중
짝수의 합 : 2550
홀수의 합 : 2500
계속하려면 아무 키나 누르십시오 . . .
*/


/*
		//짝수 변수 even, 홀수 변수 odd
		// evenSum, odffSum

		int n = 0; //초기값

		int evenSum = 0;  //짝수합
		int oddSum = 0;   //홀수합.

		// 2로 나눠서 나머지가 0 이면 
		// 짝수이고 
		// 짝수이면 evenSum에 누적해라.
		// 2 + 4+ 6+ 8+...100

		//2로 나누어서 나머지가 0이 아니면
		// 홀수이고
		//홀수이면 oddSum에 누적해라.
		// 1+3+....99


		while (n<=100)
		{
			if (n % 2 == 0)
			{
				evenSum += n;
				n ++;
			}
			else if (n % 2 != 0)
			{
				oddSum += n;
				n ++;		//★★★ 여기만 뺴주길!
			}

		}
		System.out.println("1부터 100까지의 정수 중");
		System.out.println("짝수의 합 : " + evenSum);
		System.out.println("홀수의 합 : " + oddSum);

	}
}
*/

/*
1부터 100까지의 정수 중
짝수의 합 : 2550
홀수의 합 : 2500
계속하려면 아무 키나 누르십시오 . . .
*/